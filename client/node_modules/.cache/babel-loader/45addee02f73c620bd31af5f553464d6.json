{"ast":null,"code":"import PathNode from './path-node';\nimport renderAllAttr from './utils/render-all-attributes';\nimport { htmlEncode } from '../common';\nvar ImageNode = function (PathNode) {\n  function ImageNode() {\n    PathNode.apply(this, arguments);\n  }\n  if (PathNode) ImageNode.__proto__ = PathNode;\n  ImageNode.prototype = Object.create(PathNode && PathNode.prototype);\n  ImageNode.prototype.constructor = ImageNode;\n  ImageNode.prototype.geometryChange = function geometryChange() {\n    this.allAttr(this.mapPosition());\n    this.invalidate();\n  };\n  ImageNode.prototype.optionsChange = function optionsChange(e) {\n    if (e.field === \"src\") {\n      this.allAttr(this.mapSource());\n    }\n    PathNode.prototype.optionsChange.call(this, e);\n  };\n  ImageNode.prototype.mapPosition = function mapPosition() {\n    var rect = this.srcElement.rect();\n    var tl = rect.topLeft();\n    return [[\"x\", tl.x], [\"y\", tl.y], [\"width\", rect.width() + \"px\"], [\"height\", rect.height() + \"px\"]];\n  };\n  ImageNode.prototype.renderPosition = function renderPosition() {\n    return renderAllAttr(this.mapPosition());\n  };\n  ImageNode.prototype.mapSource = function mapSource(encode) {\n    var src = this.srcElement.src();\n    if (encode) {\n      src = htmlEncode(src);\n    }\n    return [[\"xlink:href\", src]];\n  };\n  ImageNode.prototype.renderSource = function renderSource() {\n    return renderAllAttr(this.mapSource(true));\n  };\n  ImageNode.prototype.template = function template() {\n    return \"<image preserveAspectRatio='none' \" + this.renderId() + \" \" + this.renderStyle() + \" \" + this.renderTransform() + \" \" + this.renderOpacity() + this.renderPosition() + \" \" + this.renderSource() + \" \" + this.renderDefinitions() + \">\" + \"</image>\";\n  };\n  return ImageNode;\n}(PathNode);\nexport default ImageNode;","map":null,"metadata":{},"sourceType":"module"}
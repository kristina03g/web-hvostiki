{"ast":null,"code":"import { Class } from '../../common';\nexport var FreeCellVisitor = function (Class) {\n  function FreeCellVisitor(matrix) {\n    Class.call(this);\n    this.matrix = matrix;\n    this.row = matrix.length - 1;\n    this.column = matrix.length - 1;\n    this.startColumn = this.column;\n    this.dir = -1;\n    this.c = 0;\n  }\n  if (Class) FreeCellVisitor.__proto__ = Class;\n  FreeCellVisitor.prototype = Object.create(Class && Class.prototype);\n  FreeCellVisitor.prototype.constructor = FreeCellVisitor;\n  FreeCellVisitor.prototype.move = function move() {\n    this.row += this.dir * this.c;\n    this.c ^= 1;\n    this.column = this.startColumn - this.c;\n  };\n  FreeCellVisitor.prototype.getNextCell = function getNextCell() {\n    var this$1 = this;\n    while (this.matrix[this.row][this.column] !== undefined) {\n      this$1.move();\n      if (this$1.row < 0 || this$1.row >= this$1.matrix.length) {\n        this$1.dir = -this$1.dir;\n        this$1.startColumn -= this$1.startColumn !== 8 ? 2 : 3;\n        this$1.column = this$1.startColumn;\n        this$1.row = this$1.dir < 0 ? this$1.matrix.length - 1 : 0;\n      }\n    }\n    return {\n      row: this.row,\n      column: this.column\n    };\n  };\n  FreeCellVisitor.prototype.getNextRemainderCell = function getNextRemainderCell() {\n    this.move();\n    if (this.matrix[this.row][this.column] === undefined) {\n      return {\n        row: this.row,\n        column: this.column\n      };\n    }\n  };\n  return FreeCellVisitor;\n}(Class);","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { SVG_NS } from '../constants';\nvar applyStyle = function applyStyle(styleString, element) {\n  return styleString.split(';').filter(function (s) {\n    return s !== '';\n  }).forEach(function (s) {\n    var parts = s.split(':');\n    element.style[parts[0].trim()] = parts[1].trim();\n  });\n};\nvar styleAttr = 'data-style';\nvar replaceStyleAttr = function replaceStyleAttr(html) {\n  return html.replace(/\\sstyle=/g, ' ' + styleAttr + '=');\n};\nvar restoreStyleAttr = function restoreStyleAttr(container) {\n  Array.from(container.querySelectorAll('[' + styleAttr + ']')).forEach(function (element) {\n    var styleString = element.getAttribute(styleAttr);\n    element.removeAttribute(styleAttr);\n    applyStyle(styleString, element);\n  });\n};\nvar renderSVG = function renderSVG(container, svg) {\n  container.innerHTML = replaceStyleAttr(svg);\n  restoreStyleAttr(container);\n};\nif (typeof document !== \"undefined\") {\n  var testFragment = \"<svg xmlns='\" + SVG_NS + \"'></svg>\";\n  var testContainer = document.createElement(\"div\");\n  var hasParser = typeof DOMParser !== \"undefined\";\n  testContainer.innerHTML = testFragment;\n  if (hasParser && testContainer.firstChild.namespaceURI !== SVG_NS) {\n    renderSVG = function renderSVG(container, svg) {\n      var parser = new DOMParser();\n      var chartDoc = parser.parseFromString(replaceStyleAttr(svg), \"text/xml\");\n      restoreStyleAttr(chartDoc);\n      var importedDoc = document.adoptNode(chartDoc.documentElement);\n      container.innerHTML = \"\";\n      container.appendChild(importedDoc);\n    };\n  }\n}\nexport default renderSVG;","map":null,"metadata":{},"sourceType":"module"}
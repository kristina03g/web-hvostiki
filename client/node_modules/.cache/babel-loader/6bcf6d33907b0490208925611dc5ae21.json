{"ast":null,"code":"import { Class } from '../common';\nvar instance;\nvar AnimationFactory = function (Class) {\n  function AnimationFactory() {\n    Class.call(this);\n    this._items = [];\n  }\n  if (Class) AnimationFactory.__proto__ = Class;\n  AnimationFactory.prototype = Object.create(Class && Class.prototype);\n  AnimationFactory.prototype.constructor = AnimationFactory;\n  var staticAccessors = {\n    current: {\n      configurable: true\n    }\n  };\n  staticAccessors.current.get = function () {\n    if (!instance) {\n      instance = new AnimationFactory();\n    }\n    return instance;\n  };\n  AnimationFactory.prototype.register = function register(name, type) {\n    this._items.push({\n      name: name,\n      type: type\n    });\n  };\n  AnimationFactory.prototype.create = function create(element, options) {\n    var items = this._items;\n    var match;\n    if (options && options.type) {\n      var type = options.type.toLowerCase();\n      for (var i = 0; i < items.length; i++) {\n        if (items[i].name.toLowerCase() === type) {\n          match = items[i];\n          break;\n        }\n      }\n    }\n    if (match) {\n      return new match.type(element, options);\n    }\n  };\n  Object.defineProperties(AnimationFactory, staticAccessors);\n  return AnimationFactory;\n}(Class);\nexport default AnimationFactory;","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { Encoding } from './encoding';\nvar extend = Object.assign;\nexport var MsiBase = function (Encoding) {\n  function MsiBase() {\n    Encoding.apply(this, arguments);\n  }\n  if (Encoding) MsiBase.__proto__ = Encoding;\n  MsiBase.prototype = Object.create(Encoding && Encoding.prototype);\n  MsiBase.prototype.constructor = MsiBase;\n  MsiBase.prototype.initProperties = function initProperties() {\n    Encoding.prototype.initProperties.call(this);\n    extend(this, {\n      characterMap: [\"12121212\", \"12121221\", \"12122112\", \"12122121\", \"12211212\", \"12211221\", \"12212112\", \"12212121\", \"21121212\", \"21121221\"],\n      START: \"21\",\n      STOP: \"121\",\n      checkSumType: \"\",\n      checkSums: checkSums\n    });\n  };\n  MsiBase.prototype.initValue = function initValue(value, width) {\n    this.pattern = [];\n    this.value = value;\n    this.checkSumLength = 0;\n    this.width = width;\n  };\n  MsiBase.prototype.setBaseUnit = function setBaseUnit() {\n    var startStopLength = 7;\n    this.baseUnit = this.width / (12 * (this.value.length + this.checkSumLength) + this.quietZoneLength + startStopLength);\n  };\n  MsiBase.prototype.addData = function addData() {\n    var this$1 = this;\n    var value = this.value;\n    this.addPattern(this.START);\n    for (var i = 0; i < value.length; i++) {\n      this$1.addCharacter(value.charAt(i));\n    }\n    if (this.options.addCheckSum) {\n      this.addCheckSum();\n    }\n    this.addPattern(this.STOP);\n    this.setBaseUnit();\n  };\n  MsiBase.prototype.addCharacter = function addCharacter(character) {\n    var pattern = this.characterMap[character];\n    if (!pattern) {\n      this.invalidCharacterError(character);\n    }\n    this.addPattern(pattern);\n  };\n  MsiBase.prototype.addPattern = function addPattern(pattern) {\n    var this$1 = this;\n    for (var i = 0; i < pattern.length; i++) {\n      this$1.pattern.push(parseInt(pattern.charAt(i), 10));\n    }\n  };\n  MsiBase.prototype.addCheckSum = function addCheckSum() {\n    var this$1 = this;\n    var checkSumFunction = this.checkSums[this.checkSumType];\n    var checkValues = checkSumFunction.call(this.checkSums, this.value);\n    this.checksum = checkValues.join(\"\");\n    for (var i = 0; i < checkValues.length; i++) {\n      this$1.checkSumLength++;\n      this$1.addPattern(this$1.characterMap[checkValues[i]]);\n    }\n  };\n  return MsiBase;\n}(Encoding);\nexport var MsiMod10 = function (MsiBase) {\n  function MsiMod10() {\n    MsiBase.apply(this, arguments);\n  }\n  if (MsiBase) MsiMod10.__proto__ = MsiBase;\n  MsiMod10.prototype = Object.create(MsiBase && MsiBase.prototype);\n  MsiMod10.prototype.constructor = MsiMod10;\n  MsiMod10.prototype.initProperties = function initProperties() {\n    MsiBase.prototype.initProperties.call(this);\n    extend(this, {\n      name: \"MSI Modulo10\",\n      checkSumType: \"Modulo10\"\n    });\n  };\n  return MsiMod10;\n}(MsiBase);\nexport var MsiMod11 = function (MsiBase) {\n  function MsiMod11() {\n    MsiBase.apply(this, arguments);\n  }\n  if (MsiBase) MsiMod11.__proto__ = MsiBase;\n  MsiMod11.prototype = Object.create(MsiBase && MsiBase.prototype);\n  MsiMod11.prototype.constructor = MsiMod11;\n  MsiMod11.prototype.initProperties = function initProperties() {\n    MsiBase.prototype.initProperties.call(this);\n    extend(this, {\n      name: \"MSI Modulo11\",\n      checkSumType: \"Modulo11\"\n    });\n  };\n  return MsiMod11;\n}(MsiBase);\nexport var MsiMod1010 = function (MsiBase) {\n  function MsiMod1010() {\n    MsiBase.apply(this, arguments);\n  }\n  if (MsiBase) MsiMod1010.__proto__ = MsiBase;\n  MsiMod1010.prototype = Object.create(MsiBase && MsiBase.prototype);\n  MsiMod1010.prototype.constructor = MsiMod1010;\n  MsiMod1010.prototype.initProperties = function initProperties() {\n    MsiBase.prototype.initProperties.call(this);\n    extend(this, {\n      name: \"MSI Modulo10 Modulo10\",\n      checkSumType: \"Modulo10Modulo10\"\n    });\n  };\n  return MsiMod1010;\n}(MsiBase);\nexport var MsiMod1110 = function (MsiBase) {\n  function MsiMod1110() {\n    MsiBase.apply(this, arguments);\n  }\n  if (MsiBase) MsiMod1110.__proto__ = MsiBase;\n  MsiMod1110.prototype = Object.create(MsiBase && MsiBase.prototype);\n  MsiMod1110.prototype.constructor = MsiMod1110;\n  MsiMod1110.prototype.initProperties = function initProperties() {\n    MsiBase.prototype.initProperties.call(this);\n    extend(this, {\n      name: \"MSI Modulo11 Modulo10\",\n      checkSumType: \"Modulo11Modulo10\"\n    });\n  };\n  return MsiMod1110;\n}(MsiBase);\nvar checkSums = {\n  Modulo10: function Modulo10(value) {\n    var checkValues = [0, \"\"],\n      odd = value.length % 2,\n      idx,\n      evenSum,\n      oddSum;\n    for (idx = 0; idx < value.length; idx++) {\n      checkValues[(idx + odd) % 2] += parseInt(value.charAt(idx), 10);\n    }\n    oddSum = checkValues[0];\n    evenSum = (checkValues[1] * 2).toString();\n    for (idx = 0; idx < evenSum.length; idx++) {\n      oddSum += parseInt(evenSum.charAt(idx), 10);\n    }\n    return [(10 - oddSum % 10) % 10];\n  },\n  Modulo11: function Modulo11(value) {\n    var weightedSum = 0,\n      mod = 11,\n      length = value.length,\n      weight,\n      checkValue;\n    for (var i = 0; i < length; i++) {\n      weight = ((length - i) % 6 || 6) + 1;\n      weightedSum += weight * value.charAt(i);\n    }\n    checkValue = (mod - weightedSum % mod) % mod;\n    if (checkValue !== 10) {\n      return [checkValue];\n    }\n    return [1, 0];\n  },\n  Modulo11Modulo10: function Modulo11Modulo10(value) {\n    var checkValues = this.Modulo11(value),\n      mod11Value;\n    mod11Value = value + checkValues[0];\n    return checkValues.concat(this.Modulo10(mod11Value));\n  },\n  Modulo10Modulo10: function Modulo10Modulo10(value) {\n    var checkValues = this.Modulo10(value),\n      mod10Value;\n    mod10Value = value + checkValues[0];\n    return checkValues.concat(this.Modulo10(mod10Value));\n  }\n};","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { Icon } from './Icon';\nimport { SvgIcon } from './SvgIcon';\nimport { IconsContext } from './IconsContext';\n/**\n * @hidden\n */\nexport var IconWrap = React.forwardRef(function (props, ref) {\n  var _a;\n  var _b = React.useContext(IconsContext),\n    type = _b.type,\n    icons = _b.icons;\n  var icon = props.icon,\n    fontIconProps = __rest(props, [\"icon\"]);\n  var name = ((_a = props.icon) === null || _a === void 0 ? void 0 : _a.name) || props.name;\n  var svg = name && icons && icons[name] && typeof icons[name] !== 'string' ? icons[name] : icon;\n  name = name && icons && icons[name] && typeof icons[name] === 'string' ? icons[name] : name;\n  return type === 'svg' && svg ? React.createElement(SvgIcon, __assign({}, props, {\n    icon: svg,\n    ref: ref\n  })) : React.createElement(Icon, __assign({}, fontIconProps, {\n    name: name,\n    ref: ref\n  }));\n});\nIconWrap.displayName = 'KendoIconWrap';","map":null,"metadata":{},"sourceType":"module"}
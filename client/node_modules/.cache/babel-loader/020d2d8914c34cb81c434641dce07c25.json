{"ast":null,"code":"import { MIN_VALUE, MAX_VALUE } from '../../common/constants';\nimport { defined, isNumber } from '../../common';\nimport countNumbers from '../utils/count-numbers';\nvar Aggregates = {\n  min: function min(values) {\n    var length = values.length;\n    var min = MAX_VALUE;\n    for (var i = 0; i < length; i++) {\n      var value = values[i];\n      if (isNumber(value)) {\n        min = Math.min(min, value);\n      }\n    }\n    return min === MAX_VALUE ? values[0] : min;\n  },\n  max: function max(values) {\n    var length = values.length;\n    var max = MIN_VALUE;\n    for (var i = 0; i < length; i++) {\n      var value = values[i];\n      if (isNumber(value)) {\n        max = Math.max(max, value);\n      }\n    }\n    return max === MIN_VALUE ? values[0] : max;\n  },\n  sum: function sum(values) {\n    var length = values.length;\n    var sum = 0;\n    for (var i = 0; i < length; i++) {\n      var value = values[i];\n      if (isNumber(value)) {\n        sum += value;\n      }\n    }\n    return sum;\n  },\n  sumOrNull: function sumOrNull(values) {\n    var result = null;\n    if (countNumbers(values)) {\n      result = Aggregates.sum(values);\n    }\n    return result;\n  },\n  count: function count(values) {\n    var length = values.length;\n    var count = 0;\n    for (var i = 0; i < length; i++) {\n      var value = values[i];\n      if (value !== null && defined(value)) {\n        count++;\n      }\n    }\n    return count;\n  },\n  avg: function avg(values) {\n    var count = countNumbers(values);\n    var result = values[0];\n    if (count > 0) {\n      result = Aggregates.sum(values) / count;\n    }\n    return result;\n  },\n  first: function first(values) {\n    var length = values.length;\n    for (var i = 0; i < length; i++) {\n      var value = values[i];\n      if (value !== null && defined(value)) {\n        return value;\n      }\n    }\n    return values[0];\n  }\n};\nexport default Aggregates;","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport { Container } from './../Container';\nimport { CrosshairTooltip } from './Crosshair';\nimport { ChartContext } from '../ChartContext';\nvar AXES = ['categoryAxis', 'valueAxis', 'xAxis', 'yAxis'];\nfunction mapTooltips(options) {\n  var map = {};\n  for (var idx = 0; idx < AXES.length; idx++) {\n    var tooltips = axesCrosshairTooltipOptions(options, AXES[idx]);\n    for (var tooltipIdx = 0; tooltipIdx < tooltips.length; tooltipIdx++) {\n      var tooltip = tooltips[tooltipIdx];\n      map[tooltip.name + tooltip.index] = tooltip;\n    }\n  }\n  return map;\n}\nfunction axesCrosshairTooltipOptions(options, name) {\n  var result = [];\n  if (options[name]) {\n    var axes = [].concat(options[name]);\n    for (var idx = 0; idx < axes.length; idx++) {\n      var tooltip = (axes[idx].crosshair || {}).tooltip;\n      if (tooltip && tooltip.visible) {\n        result.push({\n          index: idx,\n          name: name\n        });\n      }\n    }\n  }\n  return result;\n}\n/**\n * @hidden\n */\nvar CrosshairTooltipContainer = /** @class */function (_super) {\n  __extends(CrosshairTooltipContainer, _super);\n  function CrosshairTooltipContainer() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.context = null;\n    _this.state = {\n      tooltips: {}\n    };\n    _this.storeUnsubscriber = Function.prototype;\n    _this.subscriber = function () {\n      var _a;\n      _this.setState({\n        tooltips: mapTooltips((_a = _this.context) === null || _a === void 0 ? void 0 : _a.optionsStore.getState())\n      });\n    };\n    return _this;\n  }\n  CrosshairTooltipContainer.prototype.componentDidMount = function () {\n    // This is moved here as calls to the listed methods contains setState which is restricted before component mount\n    this.storeUnsubscriber = this.context.optionsStore.subscribe(this.subscriber);\n  };\n  CrosshairTooltipContainer.prototype.render = function () {\n    var tooltips = this.state.tooltips;\n    var childrenMap = Object.keys(tooltips).map(function (key) {\n      return React.createElement(CrosshairTooltip, __assign({}, tooltips[key], {\n        key: key\n      }));\n    });\n    return React.createElement(Container, null, childrenMap);\n  };\n  CrosshairTooltipContainer.prototype.componentWillUnmount = function () {\n    this.storeUnsubscriber();\n  };\n  CrosshairTooltipContainer.contextType = ChartContext;\n  return CrosshairTooltipContainer;\n}(React.Component);\nexport { CrosshairTooltipContainer };","map":null,"metadata":{},"sourceType":"module"}
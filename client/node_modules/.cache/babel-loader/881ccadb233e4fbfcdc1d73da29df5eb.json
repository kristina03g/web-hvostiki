{"ast":null,"code":"import { Class } from '../../../common';\nimport { extend } from '../../utils';\nimport { toBitsString } from '../../utils';\nexport var QRDataMode = function (Class) {\n  function QRDataMode() {\n    Class.call(this);\n    this.initProperties();\n  }\n  if (Class) QRDataMode.__proto__ = Class;\n  QRDataMode.prototype = Object.create(Class && Class.prototype);\n  QRDataMode.prototype.constructor = QRDataMode;\n  QRDataMode.prototype.initProperties = function initProperties() {\n    extend(this, {\n      modeIndicator: \"\",\n      bitsInCharacterCount: []\n    });\n  };\n  QRDataMode.prototype.getVersionIndex = function getVersionIndex(version) {\n    if (version < 10) {\n      return 0;\n    } else if (version > 26) {\n      return 2;\n    }\n    return 1;\n  };\n  QRDataMode.prototype.getBitsCharacterCount = function getBitsCharacterCount(version) {\n    return this.bitsInCharacterCount[this.getVersionIndex(version || 40)];\n  };\n  QRDataMode.prototype.getModeCountString = function getModeCountString(length, version) {\n    return this.modeIndicator + toBitsString(length, this.getBitsCharacterCount(version));\n  };\n  QRDataMode.prototype.encode = function encode() {};\n  QRDataMode.prototype.getStringBitsLength = function getStringBitsLength() {};\n  QRDataMode.prototype.getValue = function getValue() {};\n  return QRDataMode;\n}(Class);","map":null,"metadata":{},"sourceType":"module"}
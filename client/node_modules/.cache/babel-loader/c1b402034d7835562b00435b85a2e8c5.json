{"ast":null,"code":"import { Class } from '../common';\nvar QuadRoot = function (Class) {\n  function QuadRoot() {\n    Class.call(this);\n    this.shapes = [];\n  }\n  if (Class) QuadRoot.__proto__ = Class;\n  QuadRoot.prototype = Object.create(Class && Class.prototype);\n  QuadRoot.prototype.constructor = QuadRoot;\n  QuadRoot.prototype._add = function _add(shape, bbox) {\n    this.shapes.push({\n      bbox: bbox,\n      shape: shape\n    });\n    shape._quadNode = this;\n  };\n  QuadRoot.prototype.pointShapes = function pointShapes(point) {\n    var shapes = this.shapes;\n    var length = shapes.length;\n    var result = [];\n    for (var idx = 0; idx < length; idx++) {\n      if (shapes[idx].bbox.containsPoint(point)) {\n        result.push(shapes[idx].shape);\n      }\n    }\n    return result;\n  };\n  QuadRoot.prototype.insert = function insert(shape, bbox) {\n    this._add(shape, bbox);\n  };\n  QuadRoot.prototype.remove = function remove(shape) {\n    var shapes = this.shapes;\n    var length = shapes.length;\n    for (var idx = 0; idx < length; idx++) {\n      if (shapes[idx].shape === shape) {\n        shapes.splice(idx, 1);\n        break;\n      }\n    }\n  };\n  return QuadRoot;\n}(Class);\nexport default QuadRoot;","map":null,"metadata":{},"sourceType":"module"}
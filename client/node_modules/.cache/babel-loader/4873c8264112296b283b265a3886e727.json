{"ast":null,"code":"import { Class, valueOrDefault } from '../common';\nimport { Location } from './location';\nvar math = Math,\n  max = math.max,\n  min = math.min;\nexport var Extent = function (Class) {\n  function Extent(initialNw, initialSe) {\n    Class.call(this);\n    var nw = Location.create(initialNw);\n    var se = Location.create(initialSe);\n    if (nw.lng + 180 > se.lng + 180 && nw.lat + 90 < se.lat + 90) {\n      this.se = nw;\n      this.nw = se;\n    } else {\n      this.se = se;\n      this.nw = nw;\n    }\n  }\n  if (Class) Extent.__proto__ = Class;\n  Extent.prototype = Object.create(Class && Class.prototype);\n  Extent.prototype.constructor = Extent;\n  var staticAccessors = {\n    World: {\n      configurable: true\n    }\n  };\n  Extent.prototype.contains = function contains(loc) {\n    var nw = this.nw,\n      se = this.se,\n      lng = valueOrDefault(loc.lng, loc[1]),\n      lat = valueOrDefault(loc.lat, loc[0]);\n    return loc && lng + 180 >= nw.lng + 180 && lng + 180 <= se.lng + 180 && lat + 90 >= se.lat + 90 && lat + 90 <= nw.lat + 90;\n  };\n  Extent.prototype.center = function center() {\n    var nw = this.nw;\n    var se = this.se;\n    var lng = nw.lng + (se.lng - nw.lng) / 2;\n    var lat = nw.lat + (se.lat - nw.lat) / 2;\n    return new Location(lat, lng);\n  };\n  Extent.prototype.containsAny = function containsAny(locs) {\n    var this$1 = this;\n    var result = false;\n    for (var i = 0; i < locs.length; i++) {\n      result = result || this$1.contains(locs[i]);\n    }\n    return result;\n  };\n  Extent.prototype.include = function include(loc) {\n    var nw = this.nw,\n      se = this.se,\n      lng = valueOrDefault(loc.lng, loc[1]),\n      lat = valueOrDefault(loc.lat, loc[0]);\n    nw.lng = min(nw.lng, lng);\n    nw.lat = max(nw.lat, lat);\n    se.lng = max(se.lng, lng);\n    se.lat = min(se.lat, lat);\n  };\n  Extent.prototype.includeAll = function includeAll(locs) {\n    var this$1 = this;\n    for (var i = 0; i < locs.length; i++) {\n      this$1.include(locs[i]);\n    }\n  };\n  Extent.prototype.edges = function edges() {\n    var nw = this.nw,\n      se = this.se;\n    return {\n      nw: this.nw,\n      ne: new Location(nw.lat, se.lng),\n      se: this.se,\n      sw: new Location(se.lat, nw.lng)\n    };\n  };\n  Extent.prototype.toArray = function toArray() {\n    var nw = this.nw,\n      se = this.se;\n    return [nw, new Location(nw.lat, se.lng), se, new Location(se.lat, nw.lng)];\n  };\n  Extent.prototype.overlaps = function overlaps(extent) {\n    return this.containsAny(extent.toArray()) || extent.containsAny(this.toArray());\n  };\n  Extent.create = function create(a, b) {\n    if (a instanceof Extent) {\n      return a;\n    } else if (a && b) {\n      return new Extent(a, b);\n    } else if (a && a.length === 4 && !b) {\n      return new Extent([a[0], a[1]], [a[2], a[3]]);\n    }\n  };\n  staticAccessors.World.get = function () {\n    return new Extent([90, -180], [-90, 180]);\n  };\n  Object.defineProperties(Extent, staticAccessors);\n  return Extent;\n}(Class);","map":null,"metadata":{},"sourceType":"module"}
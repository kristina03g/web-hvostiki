{"ast":null,"code":"import { Class, logToConsole } from './common';\nimport SVGSurface from './svg/surface';\nimport CanvasSurface from './canvas/surface';\nvar instance;\nvar support;\nvar hasDocument = function hasDocument() {\n  return typeof document !== \"undefined\";\n};\nvar supportsCanvas = function supportsCanvas() {\n  return hasDocument() && document.createElement(\"canvas\").getContext;\n};\nvar supportsSVG = function supportsSVG() {\n  return hasDocument() && document.implementation.hasFeature(\"http://www.w3.org/TR/SVG11/feature#BasicStructure\", \"1.1\");\n};\nvar SurfaceFactory = function (Class) {\n  function SurfaceFactory() {\n    Class.call(this);\n    this._items = [{\n      name: \"svg\",\n      type: SVGSurface\n    }, {\n      name: \"canvas\",\n      type: CanvasSurface\n    }];\n  }\n  if (Class) SurfaceFactory.__proto__ = Class;\n  SurfaceFactory.prototype = Object.create(Class && Class.prototype);\n  SurfaceFactory.prototype.constructor = SurfaceFactory;\n  var staticAccessors = {\n    support: {\n      configurable: true\n    },\n    current: {\n      configurable: true\n    }\n  };\n  staticAccessors.support.get = function () {\n    if (!support) {\n      support = {\n        canvas: supportsCanvas(),\n        svg: supportsSVG()\n      };\n    }\n    return support;\n  };\n  staticAccessors.current.get = function () {\n    if (!instance) {\n      instance = new SurfaceFactory();\n    }\n    return instance;\n  };\n  SurfaceFactory.prototype.create = function create(element, options) {\n    var items = this._items;\n    var match = items[0];\n    if (options && options.type) {\n      var preferred = options.type.toLowerCase();\n      for (var i = 0; i < items.length; i++) {\n        if (items[i].name === preferred) {\n          match = items[i];\n          break;\n        }\n      }\n    }\n    if (match) {\n      return new match.type(element, options);\n    }\n    logToConsole(\"Warning: Unable to create Kendo UI Drawing Surface. Possible causes:\\n\" + \"- The browser does not support SVG and Canvas. User agent: \" + navigator.userAgent);\n  };\n  Object.defineProperties(SurfaceFactory, staticAccessors);\n  return SurfaceFactory;\n}(Class);\nexport default SurfaceFactory;","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { Encodings } from './encodings/main';\nvar validate = function validate(encoding, size, prefix) {\n  return function (value) {\n    try {\n      encoding.encode(prefix + value, size.width, size.height);\n    } catch (error) {\n      return {\n        valid: false,\n        error: error\n      };\n    }\n    return {\n      valid: true\n    };\n  };\n};\n\n// A default size for encodings, so the validator can check only the value if no size is provided.\nvar fallbackSize = {\n  width: 500,\n  height: 100\n};\nfunction barcodeValidator(type, size) {\n  if (size === void 0) size = fallbackSize;\n  if (!type) {\n    throw new Error(\"Please specify barcode type to validate.\");\n  }\n  var resolvedType = type.toLowerCase();\n  var prefix = '';\n  if (resolvedType === 'upca') {\n    resolvedType = 'ean13';\n    prefix = '0';\n  } else if (resolvedType === 'upce') {\n    resolvedType = 'ean8';\n    prefix = '0';\n  }\n  if (!Encodings[resolvedType]) {\n    throw new Error(\"Encoding '\" + type + \"' is not supported.\");\n  }\n  var encoding = new Encodings[resolvedType]();\n  return validate(encoding, size, prefix);\n}\nexport default barcodeValidator;","map":null,"metadata":{},"sourceType":"module"}
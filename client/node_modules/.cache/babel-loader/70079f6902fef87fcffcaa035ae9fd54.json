{"ast":null,"code":"import withPoints from '../mixins/with-points';\nimport Point from '../geometry/point';\nimport Gradient from './gradient';\nimport { defined } from '../util';\nvar RadialGradient = function (superclass) {\n  function RadialGradient(options) {\n    if (options === void 0) options = {};\n    superclass.call(this, options);\n    this.center(options.center || new Point());\n    this._radius = defined(options.radius) ? options.radius : 1;\n    this._fallbackFill = options.fallbackFill;\n  }\n  if (superclass) RadialGradient.__proto__ = superclass;\n  RadialGradient.prototype = Object.create(superclass && superclass.prototype);\n  RadialGradient.prototype.constructor = RadialGradient;\n  RadialGradient.prototype.radius = function radius(value) {\n    if (defined(value)) {\n      this._radius = value;\n      this.geometryChange();\n      return this;\n    }\n    return this._radius;\n  };\n  RadialGradient.prototype.fallbackFill = function fallbackFill(value) {\n    if (defined(value)) {\n      this._fallbackFill = value;\n      this.optionsChange();\n      return this;\n    }\n    return this._fallbackFill;\n  };\n  return RadialGradient;\n}(withPoints(Gradient, [\"center\"]));\nexport default RadialGradient;","map":null,"metadata":{},"sourceType":"module"}
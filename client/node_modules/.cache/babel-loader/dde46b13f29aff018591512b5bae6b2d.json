{"ast":null,"code":"import { Code93 } from './code93';\nimport { Code39ExtendedBase } from './code39-extended';\nimport deepExtend from '../../common/deep-extend';\nexport var Code93Extended = function (Code93) {\n  function Code93Extended() {\n    Code93.apply(this, arguments);\n  }\n  if (Code93) Code93Extended.__proto__ = Code93;\n  Code93Extended.prototype = Object.create(Code93 && Code93.prototype);\n  Code93Extended.prototype.constructor = Code93Extended;\n  Code93Extended.prototype.initProperties = function initProperties() {\n    Code93.prototype.initProperties.call(this);\n    deepExtend(this, Code39ExtendedBase, {\n      name: \"Code 93 extended\",\n      pushCheckSum: function pushCheckSum() {\n        var this$1 = this;\n        var checkValues = this._getCheckValues();\n        var value;\n        this.checksum = checkValues.join(\"\");\n        for (var i = 0; i < checkValues.length; i++) {\n          value = checkValues[i];\n          if (this$1.shiftValuesAsciiCodes[value]) {\n            this$1.addExtended(this$1.shiftValuesAsciiCodes[value]);\n          } else {\n            var characterByValue = this$1._findCharacterByValue(value);\n            this$1.addPattern(this$1.characterMap[characterByValue].pattern);\n          }\n        }\n      }\n    });\n  };\n  return Code93Extended;\n}(Code93);","map":null,"metadata":{},"sourceType":"module"}
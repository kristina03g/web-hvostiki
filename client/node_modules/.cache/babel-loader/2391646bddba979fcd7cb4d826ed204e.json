{"ast":null,"code":"import { geometry as geom } from '@progress/kendo-drawing';\nimport { last } from '../../common';\nimport { X, Y } from '../../common/constants';\nvar StepLineMixin = {\n  calculateStepPoints: function calculateStepPoints(points) {\n    var categoryAxis = this.parent.plotArea.seriesCategoryAxis(this.series);\n    var ref = categoryAxis.options;\n    var justified = ref.justified;\n    var vertical = ref.vertical;\n    var reverse = ref.reverse;\n    var stepAxis = vertical ? X : Y;\n    var axis = vertical ? Y : X;\n    var stepDir = reverse ? 2 : 1;\n    var dir = stepDir;\n    var previousPoint = toGeometryPoint(points[0], stepAxis, stepDir, axis, dir);\n    var result = [previousPoint];\n    for (var idx = 1; idx < points.length; idx++) {\n      var point = toGeometryPoint(points[idx], stepAxis, stepDir, axis, dir);\n      if (previousPoint[stepAxis] !== point[stepAxis]) {\n        var stepPoint = new geom.Point();\n        stepPoint[stepAxis] = previousPoint[stepAxis];\n        stepPoint[axis] = point[axis];\n        result.push(stepPoint, point);\n      }\n      previousPoint = point;\n    }\n    if (!justified) {\n      result.push(toGeometryPoint(last(points), stepAxis, stepDir, axis, reverse ? 1 : 2));\n    } else if (previousPoint !== last(result)) {\n      result.push(previousPoint);\n    }\n    return result;\n  }\n};\nfunction toGeometryPoint(lintPoint, stepAxis, stepDir, axis, dir) {\n  var box = lintPoint.box;\n  var result = new geom.Point();\n  result[stepAxis] = box[stepAxis + stepDir];\n  result[axis] = box[axis + dir];\n  return result;\n}\nexport default StepLineMixin;","map":null,"metadata":{},"sourceType":"module"}
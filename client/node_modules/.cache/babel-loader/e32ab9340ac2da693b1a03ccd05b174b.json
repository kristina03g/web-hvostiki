{"ast":null,"code":"import { Class, addClass, isArray, getter, deepExtend, setDefaultOptions } from '../../common';\nimport { Layer } from './layer';\nimport { Location } from '../location';\nimport { proxy, on, off, toHyphens, toPixels, convertToHtml } from '../utils';\nimport TemplateService from '../../services/template-service';\nvar CLICK = \"click\";\nvar MOUSE_ENTER = \"mouseenter\";\nvar MOUSE_LEAVE = \"mouseleave\";\nvar extend = Object.assign;\nvar MARKER_CLASS_NAME = \"k-marker\";\nvar MARKER_CLASS = \".\" + MARKER_CLASS_NAME;\nexport var MarkerLayer = function (Layer) {\n  function MarkerLayer(map, options) {\n    Layer.call(this, map, options);\n    this._markerClickHandler = proxy(this._markerClick, this);\n    on(this.element, CLICK, MARKER_CLASS, this._markerClickHandler);\n    this.items = [];\n    this._load(this._readData());\n  }\n  if (Layer) MarkerLayer.__proto__ = Layer;\n  MarkerLayer.prototype = Object.create(Layer && Layer.prototype);\n  MarkerLayer.prototype.constructor = MarkerLayer;\n  MarkerLayer.prototype.destroy = function destroy() {\n    Layer.prototype.destroy.call(this);\n    off(this.element, CLICK, this._markerClickHandler);\n    this.clear();\n  };\n  MarkerLayer.prototype.add = function add(args) {\n    var this$1 = this;\n    if (isArray(args)) {\n      for (var i = 0; i < args.length; i++) {\n        this$1._addOne(args[i]);\n      }\n    } else {\n      return this._addOne(args);\n    }\n  };\n  MarkerLayer.prototype.remove = function remove(marker) {\n    marker.destroy();\n    var index = (this.items || []).indexOf(marker);\n    if (index > -1) {\n      this.items.splice(index, 1);\n    }\n  };\n  MarkerLayer.prototype.clear = function clear() {\n    var this$1 = this;\n    for (var i = 0; i < this.items.length; i++) {\n      this$1.items[i].destroy();\n    }\n    this.items = [];\n  };\n  MarkerLayer.prototype.update = function update(marker) {\n    var location = marker.location();\n    if (location) {\n      marker.showAt(this.map.locationToView(location));\n      var args = {\n        marker: marker,\n        layer: this\n      };\n      this.map.trigger('markerActivate', args);\n    }\n  };\n  MarkerLayer.prototype._reset = function _reset() {\n    var this$1 = this;\n    Layer.prototype._reset.call(this);\n    var items = this.items;\n    for (var i = 0; i < items.length; i++) {\n      this$1.update(items[i]);\n    }\n  };\n  MarkerLayer.prototype.bind = function bind(options, dataItem) {\n    var marker = Marker.create(options, this.options);\n    marker.dataItem = dataItem;\n    var args = {\n      marker: marker,\n      layer: this\n    };\n    var cancelled = this.map.trigger('markerCreated', args);\n    if (!cancelled) {\n      this.add(marker);\n      return marker;\n    }\n  };\n  MarkerLayer.prototype._addOne = function _addOne(arg) {\n    var marker = Marker.create(arg, this.options);\n    marker.addTo(this);\n    return marker;\n  };\n  MarkerLayer.prototype._readData = function _readData() {\n    var data = this.options.data || [];\n    return data;\n  };\n  MarkerLayer.prototype._load = function _load(data) {\n    var this$1 = this;\n    this._data = data;\n    this.clear();\n    var getLocation = getter(this.options.locationField);\n    var getTitle = getter(this.options.titleField);\n    for (var i = 0; i < data.length; i++) {\n      var dataItem = data[i];\n      this$1.bind({\n        location: getLocation(dataItem),\n        title: getTitle(dataItem)\n      }, dataItem);\n    }\n  };\n  MarkerLayer.prototype._markerClick = function _markerClick(e) {\n    var marker = e.currentTarget._kendoNode;\n    var args = {\n      layer: this,\n      layerIndex: this._layerIndex(),\n      marker: marker,\n      markerIndex: (this.items || []).indexOf(marker),\n      originalEvent: e\n    };\n    this.map.trigger('markerClick', args);\n  };\n  MarkerLayer.prototype._markerMouseEnter = function _markerMouseEnter(e) {\n    var args = this._createMarkerEventArgs(e);\n    this.map.trigger(\"markerMouseEnter\", args);\n  };\n  MarkerLayer.prototype._markerMouseLeave = function _markerMouseLeave(e) {\n    var args = this._createMarkerEventArgs(e);\n    this.map.trigger(\"markerMouseLeave\", args);\n  };\n  MarkerLayer.prototype._createMarkerEventArgs = function _createMarkerEventArgs(e) {\n    var marker = e.marker;\n    var args = extend({}, {\n      layer: this,\n      layerIndex: this._layerIndex(),\n      marker: marker,\n      markerIndex: (this.items || []).indexOf(marker)\n    }, e);\n    return args;\n  };\n  return MarkerLayer;\n}(Layer);\nsetDefaultOptions(MarkerLayer, {\n  zIndex: 1000,\n  autoBind: true,\n  locationField: 'location',\n  titleField: 'title',\n  template: \"\"\n});\nexport var Marker = function (Class) {\n  function Marker(options) {\n    Class.call(this);\n    this.options = options || {};\n  }\n  if (Class) Marker.__proto__ = Class;\n  Marker.prototype = Object.create(Class && Class.prototype);\n  Marker.prototype.constructor = Marker;\n  Marker.prototype.destroy = function destroy() {\n    this.layer = null;\n    this.unbindEvents();\n    this.hide();\n  };\n  Marker.prototype.addTo = function addTo(parent) {\n    this.layer = parent.markers || parent;\n    this.layer.items.push(this);\n    this.layer.update(this);\n  };\n  Marker.prototype.location = function location(value) {\n    if (value) {\n      this.options.location = Location.create(value).toArray();\n      if (this.layer) {\n        this.layer.update(this);\n      }\n      return this;\n    }\n    return Location.create(this.options.location);\n  };\n  Marker.prototype.showAt = function showAt(point) {\n    this.render();\n    this._anchor = {\n      left: Math.round(point.x),\n      top: Math.round(point.y)\n    };\n    this.element.style.left = toPixels(this._anchor.left);\n    this.element.style.top = toPixels(this._anchor.top);\n  };\n  Marker.prototype.hide = function hide() {\n    if (this.element) {\n      this.element.remove();\n      this.element = null;\n    }\n  };\n  Marker.prototype.bindEvents = function bindEvents() {\n    if (!this.element) {\n      return;\n    }\n    this._mouseEnterHandler = proxy(this._mouseEnter, this);\n    on(this.element, MOUSE_ENTER, MARKER_CLASS, this._mouseEnterHandler);\n    this._mouseLeaveHandler = proxy(this._mouseLeave, this);\n    on(this.element, MOUSE_LEAVE, MARKER_CLASS, this._mouseLeaveHandler);\n  };\n  Marker.prototype.unbindEvents = function unbindEvents() {\n    if (!this.element) {\n      return;\n    }\n    off(this.element, MOUSE_ENTER, this._mouseEnterHandler);\n    off(this.element, MOUSE_LEAVE, this._mouseLeaveHandler);\n  };\n  Marker.prototype.render = function render() {\n    if (!this.element) {\n      var options = this.options;\n      var layer = this.layer;\n      var element = document.createElement('span');\n      addClass(element, MARKER_CLASS_NAME);\n      if (this.options.template) {\n        var templateFn = this._compileTemplate(this.options.template);\n        var templateHtml = templateFn(this.dataItem);\n        var templateElement = convertToHtml(templateHtml);\n        element.appendChild(templateElement);\n      } else {\n        addClass(element, 'k-icon k-i-marker-' + toHyphens(options.shape || 'pin'));\n      }\n      if (options.title) {\n        element.setAttribute(\"title\", options.title);\n      }\n      var attributes = options.attributes || {};\n      Object.keys(attributes).forEach(function (key) {\n        element.setAttribute(key, attributes[key]);\n      });\n      element._kendoNode = this;\n      element.style.zIndex = options.zIndex;\n      this.element = element;\n      if (layer) {\n        layer.element.appendChild(this.element);\n      }\n      this.bindEvents();\n    }\n  };\n  Marker.prototype._mouseEnter = function _mouseEnter(e) {\n    var args = this._createEventArgs(e);\n    this.layer._markerMouseEnter(args);\n    this.layer.map._tooltip.show({\n      top: this._anchor.top - this.element.offsetHeight,\n      left: this._anchor.left\n    }, this._tooltipContext());\n  };\n  Marker.prototype._tooltipContext = function _tooltipContext() {\n    return {\n      type: 'marker',\n      layerIndex: this.layer._layerIndex(),\n      className: 'k-map-marker-tooltip',\n      dataItem: this.dataItem,\n      title: this.options.title,\n      location: this.location()\n    };\n  };\n  Marker.prototype._mouseLeave = function _mouseLeave(e) {\n    var args = this._createEventArgs(e);\n    this.layer._markerMouseLeave(args);\n  };\n  Marker.prototype._createEventArgs = function _createEventArgs(e) {\n    var args = {\n      marker: this,\n      originalEvent: e\n    };\n    return args;\n  };\n  Marker.prototype._compileTemplate = function _compileTemplate(template) {\n    return TemplateService.compile(template, {\n      paramName: \"dataItem\",\n      useWithBlock: false\n    });\n  };\n  Marker.create = function create(arg, defaults) {\n    if (arg instanceof Marker) {\n      return arg;\n    }\n    return new Marker(deepExtend({}, defaults, arg));\n  };\n  return Marker;\n}(Class);","map":null,"metadata":{},"sourceType":"module"}
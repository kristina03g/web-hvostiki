{"ast":null,"code":"import toChartAxisRanges from './to-chart-axis-ranges';\nimport { X, Y } from '../../common/constants';\nimport { Class, deepExtend } from '../../common';\nimport { limitValue } from '../../drawing-utils';\n\n// Limit the zoom rate between 1% and 90% per mousewheel event.\n// At zoom rates close to 100% the axis range quickly becomes 0.\nvar MIN_RATE = 0.01;\nvar MAX_RATE = 0.9;\nvar DEFAULT_RATE = 0.3;\nvar MousewheelZoom = function (Class) {\n  function MousewheelZoom(chart, options) {\n    Class.call(this);\n    this.chart = chart;\n    this.options = deepExtend({\n      rate: DEFAULT_RATE\n    }, this.options, options);\n  }\n  if (Class) MousewheelZoom.__proto__ = Class;\n  MousewheelZoom.prototype = Object.create(Class && Class.prototype);\n  MousewheelZoom.prototype.constructor = MousewheelZoom;\n  MousewheelZoom.prototype.updateRanges = function updateRanges(delta, coords) {\n    var this$1 = this;\n    var lock = (this.options.lock || \"\").toLowerCase();\n    var axisRanges = [];\n    var axes = this.chart._plotArea.axes;\n    for (var idx = 0; idx < axes.length; idx++) {\n      var axis = axes[idx];\n      var vertical = axis.options.vertical;\n      if (!(lock === X && !vertical) && !(lock === Y && vertical) && axis.zoomRange) {\n        var rate = limitValue(this$1.options.rate, MIN_RATE, MAX_RATE);\n        var range = axis.zoomRange(-delta * rate, coords);\n        if (range) {\n          axisRanges.push({\n            axis: axis,\n            range: range\n          });\n        }\n      }\n    }\n    this.axisRanges = axisRanges;\n    return toChartAxisRanges(axisRanges);\n  };\n  MousewheelZoom.prototype.zoom = function zoom() {\n    var axisRanges = this.axisRanges;\n    var plotArea = this.chart._plotArea;\n    if (axisRanges && axisRanges.length && plotArea.updateAxisOptions) {\n      for (var idx = 0; idx < axisRanges.length; idx++) {\n        var axisRange = axisRanges[idx];\n        plotArea.updateAxisOptions(axisRange.axis, axisRange.range);\n      }\n      plotArea.redraw(plotArea.panes);\n    }\n  };\n  MousewheelZoom.prototype.destroy = function destroy() {\n    delete this.chart;\n  };\n  return MousewheelZoom;\n}(Class);\nexport default MousewheelZoom;","map":null,"metadata":{},"sourceType":"module"}
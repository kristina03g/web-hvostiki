{"ast":null,"code":"import StopsArray from './stops-array';\nimport GradientStop from './gradient-stop';\nimport HasObservers from '../core/has-observers';\nimport { defined, definitionId } from '../util';\nvar Gradient = function (HasObservers) {\n  function Gradient(options) {\n    if (options === void 0) options = {};\n    HasObservers.call(this);\n    this.stops = new StopsArray(this._createStops(options.stops));\n    this.stops.addObserver(this);\n    this._userSpace = options.userSpace;\n    this.id = definitionId();\n  }\n  if (HasObservers) Gradient.__proto__ = HasObservers;\n  Gradient.prototype = Object.create(HasObservers && HasObservers.prototype);\n  Gradient.prototype.constructor = Gradient;\n  var prototypeAccessors = {\n    nodeType: {\n      configurable: true\n    }\n  };\n  prototypeAccessors.nodeType.get = function () {\n    return \"Gradient\";\n  };\n  Gradient.prototype.userSpace = function userSpace(value) {\n    if (defined(value)) {\n      this._userSpace = value;\n      this.optionsChange();\n      return this;\n    }\n    return this._userSpace;\n  };\n  Gradient.prototype._createStops = function _createStops(stops) {\n    if (stops === void 0) stops = [];\n    var result = [];\n    for (var idx = 0; idx < stops.length; idx++) {\n      result.push(GradientStop.create(stops[idx]));\n    }\n    return result;\n  };\n  Gradient.prototype.addStop = function addStop(offset, color, opacity) {\n    this.stops.push(new GradientStop(offset, color, opacity));\n  };\n  Gradient.prototype.removeStop = function removeStop(stop) {\n    var index = this.stops.indexOf(stop);\n    if (index >= 0) {\n      this.stops.splice(index, 1);\n    }\n  };\n  Gradient.prototype.optionsChange = function optionsChange(e) {\n    this.trigger(\"optionsChange\", {\n      field: \"gradient\" + (e ? \".\" + e.field : \"\"),\n      value: this\n    });\n  };\n  Gradient.prototype.geometryChange = function geometryChange() {\n    this.optionsChange();\n  };\n  Object.defineProperties(Gradient.prototype, prototypeAccessors);\n  return Gradient;\n}(HasObservers);\nexport default Gradient;","map":null,"metadata":{},"sourceType":"module"}
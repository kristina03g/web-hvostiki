{"ast":null,"code":"var eitherRect = function eitherRect(rect, offset) {\n  if (!rect) {\n    return {\n      height: 0,\n      left: offset.left,\n      top: offset.top,\n      width: 0\n    };\n  }\n  return rect;\n};\nvar scaleRect = function scaleRect(rect, scale) {\n  if (!rect || scale === 1) {\n    return rect;\n  }\n  return {\n    height: rect.height / scale,\n    left: rect.left / scale,\n    top: rect.top / scale,\n    width: rect.width / scale\n  };\n};\nvar removeStackingOffset = function removeStackingOffset(rect, stackingOffset) {\n  if (!stackingOffset) {\n    return rect;\n  }\n  var result = {\n    height: rect.height,\n    left: rect.left - stackingOffset.left,\n    top: rect.top - stackingOffset.top,\n    width: rect.width\n  };\n  return result;\n};\nfunction memoize(fun) {\n  var result;\n  var called = false;\n  return function () {\n    var args = [],\n      len = arguments.length;\n    while (len--) args[len] = arguments[len];\n    if (called) {\n      return result;\n    }\n    result = fun.apply(void 0, args);\n    called = true;\n    return result;\n  };\n}\nvar hasRelativeStackingContext = memoize(function (elementSource) {\n  if (!canUseDOM()) {\n    return false;\n  }\n\n  // Component need to pass element to make sure document owner is correct.\n  // This however might be performance hit if checked for example on each drag event.\n  var currentDocument = elementSource ? elementSource.ownerDocument : document;\n  if (!currentDocument || !currentDocument.body) {\n    return false;\n  }\n  var top = 10;\n  var parent = currentDocument.createElement(\"div\");\n  parent.style.transform = \"matrix(10, 0, 0, 10, 0, 0)\";\n  parent.innerHTML = \"<div style=\\\"position: fixed; top: \" + top + \"px;\\\">child</div>\";\n  currentDocument.body.appendChild(parent);\n  var isDifferent = parent.children[0].getBoundingClientRect().top !== top;\n  currentDocument.body.removeChild(parent);\n  return isDifferent;\n});\nvar canUseDOM = function canUseDOM() {\n  return Boolean(\n  // from fbjs\n  typeof window !== 'undefined' && window.document && window.document.createElement);\n};\nvar utils = {\n  eitherRect: eitherRect,\n  scaleRect: scaleRect,\n  removeStackingOffset: removeStackingOffset,\n  hasRelativeStackingContext: hasRelativeStackingContext,\n  canUseDOM: canUseDOM\n};\nexport default utils;","map":null,"metadata":{},"sourceType":"module"}
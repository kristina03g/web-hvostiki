{"ast":null,"code":"import { setDefaultOptions } from '../../common';\nimport { Encoding } from './encoding';\nvar extend = Object.assign;\nexport var Code39Base = function (Encoding) {\n  function Code39Base() {\n    Encoding.apply(this, arguments);\n  }\n  if (Encoding) Code39Base.__proto__ = Encoding;\n  Code39Base.prototype = Object.create(Encoding && Encoding.prototype);\n  Code39Base.prototype.constructor = Code39Base;\n  Code39Base.prototype.initProperties = function initProperties() {\n    Encoding.prototype.initProperties.call(this);\n    extend(this, {\n      minBaseUnitLength: 0.7\n    });\n  };\n  Code39Base.prototype.addData = function addData() {\n    var this$1 = this;\n    var value = this.value;\n    this.addStart();\n    for (var idx = 0; idx < value.length; idx++) {\n      this$1.addCharacter(value.charAt(idx));\n    }\n    if (this.options.addCheckSum) {\n      this.pushCheckSum();\n    }\n    this.addStop();\n    this.prepareValues();\n  };\n  Code39Base.prototype.addCharacter = function addCharacter(character) {\n    var characterData = this.characterMap[character];\n    if (!characterData) {\n      this.invalidCharacterError(character);\n    }\n    this.addBase(characterData);\n  };\n  Code39Base.prototype.addBase = function addBase() {};\n  return Code39Base;\n}(Encoding);\nexport var Code39 = function (Code39Base) {\n  function Code39() {\n    Code39Base.apply(this, arguments);\n  }\n  if (Code39Base) Code39.__proto__ = Code39Base;\n  Code39.prototype = Object.create(Code39Base && Code39Base.prototype);\n  Code39.prototype.constructor = Code39;\n  Code39.prototype.initProperties = function initProperties() {\n    Code39Base.prototype.initProperties.call(this);\n    extend(this, {\n      name: \"Code 39\",\n      checkSumMod: 43,\n      minRatio: 2.5,\n      maxRatio: 3,\n      gapWidth: 1,\n      splitCharacter: \"|\",\n      patternMappings: {\n        \"b\": \"1|\",\n        \"w\": \"1|\",\n        \"B\": \"ratio|\",\n        \"W\": \"ratio|\"\n      },\n      characterMap: {\n        \"0\": {\n          \"pattern\": \"bwbWBwBwb\",\n          \"value\": 0\n        },\n        \"1\": {\n          \"pattern\": \"BwbWbwbwB\",\n          \"value\": 1\n        },\n        \"2\": {\n          \"pattern\": \"bwBWbwbwB\",\n          \"value\": 2\n        },\n        \"3\": {\n          \"pattern\": \"BwBWbwbwb\",\n          \"value\": 3\n        },\n        \"4\": {\n          \"pattern\": \"bwbWBwbwB\",\n          \"value\": 4\n        },\n        \"5\": {\n          \"pattern\": \"BwbWBwbwb\",\n          \"value\": 5\n        },\n        \"6\": {\n          \"pattern\": \"bwBWBwbwb\",\n          \"value\": 6\n        },\n        \"7\": {\n          \"pattern\": \"bwbWbwBwB\",\n          \"value\": 7\n        },\n        \"8\": {\n          \"pattern\": \"BwbWbwBwb\",\n          \"value\": 8\n        },\n        \"9\": {\n          \"pattern\": \"bwBWbwBwb\",\n          \"value\": 9\n        },\n        \"A\": {\n          \"pattern\": \"BwbwbWbwB\",\n          \"value\": 10\n        },\n        \"B\": {\n          \"pattern\": \"bwBwbWbwB\",\n          \"value\": 11\n        },\n        \"C\": {\n          \"pattern\": \"BwBwbWbwb\",\n          \"value\": 12\n        },\n        \"D\": {\n          \"pattern\": \"bwbwBWbwB\",\n          \"value\": 13\n        },\n        \"E\": {\n          \"pattern\": \"BwbwBWbwb\",\n          \"value\": 14\n        },\n        \"F\": {\n          \"pattern\": \"bwBwBWbwb\",\n          \"value\": 15\n        },\n        \"G\": {\n          \"pattern\": \"bwbwbWBwB\",\n          \"value\": 16\n        },\n        \"H\": {\n          \"pattern\": \"BwbwbWBwb\",\n          \"value\": 17\n        },\n        \"I\": {\n          \"pattern\": \"bwBwbWBwb\",\n          \"value\": 18\n        },\n        \"J\": {\n          \"pattern\": \"bwbwBWBwb\",\n          \"value\": 19\n        },\n        \"K\": {\n          \"pattern\": \"BwbwbwbWB\",\n          \"value\": 20\n        },\n        \"L\": {\n          \"pattern\": \"bwBwbwbWB\",\n          \"value\": 21\n        },\n        \"M\": {\n          \"pattern\": \"BwBwbwbWb\",\n          \"value\": 22\n        },\n        \"N\": {\n          \"pattern\": \"bwbwBwbWB\",\n          \"value\": 23\n        },\n        \"O\": {\n          \"pattern\": \"BwbwBwbWb\",\n          \"value\": 24\n        },\n        \"P\": {\n          \"pattern\": \"bwBwBwbWb\",\n          \"value\": 25\n        },\n        \"Q\": {\n          \"pattern\": \"bwbwbwBWB\",\n          \"value\": 26\n        },\n        \"R\": {\n          \"pattern\": \"BwbwbwBWb\",\n          \"value\": 27\n        },\n        \"S\": {\n          \"pattern\": \"bwBwbwBWb\",\n          \"value\": 28\n        },\n        \"T\": {\n          \"pattern\": \"bwbwBwBWb\",\n          \"value\": 29\n        },\n        \"U\": {\n          \"pattern\": \"BWbwbwbwB\",\n          \"value\": 30\n        },\n        \"V\": {\n          \"pattern\": \"bWBwbwbwB\",\n          \"value\": 31\n        },\n        \"W\": {\n          \"pattern\": \"BWBwbwbwb\",\n          \"value\": 32\n        },\n        \"X\": {\n          \"pattern\": \"bWbwBwbwB\",\n          \"value\": 33\n        },\n        \"Y\": {\n          \"pattern\": \"BWbwBwbwb\",\n          \"value\": 34\n        },\n        \"Z\": {\n          \"pattern\": \"bWBwBwbwb\",\n          \"value\": 35\n        },\n        \"-\": {\n          \"pattern\": \"bWbwbwBwB\",\n          \"value\": 36\n        },\n        \".\": {\n          \"pattern\": \"BWbwbwBwb\",\n          \"value\": 37\n        },\n        \" \": {\n          \"pattern\": \"bWBwbwBwb\",\n          \"value\": 38\n        },\n        \"$\": {\n          \"pattern\": \"bWbWbWbwb\",\n          \"value\": 39\n        },\n        \"/\": {\n          \"pattern\": \"bWbWbwbWb\",\n          \"value\": 40\n        },\n        \"+\": {\n          \"pattern\": \"bWbwbWbWb\",\n          \"value\": 41\n        },\n        \"%\": {\n          \"pattern\": \"bwbWbWbWb\",\n          \"value\": 42\n        },\n        START: {\n          pattern: \"bWbwBwBwb\"\n        }\n      }\n    });\n  };\n  Code39.prototype.initValue = function initValue(value, width, height) {\n    this.width = width;\n    this.height = height;\n    this.value = value;\n    this.dataLength = value.length;\n    this.pattern = [];\n    this.patternString = \"\";\n  };\n  Code39.prototype.prepareValues = function prepareValues() {\n    var this$1 = this;\n    var minBaseUnit = this.minBaseUnitLength;\n    var minRatio = this.minRatio;\n    var minHeight = Math.ceil(Math.max(0.15 * this.width, 24));\n    var baseUnit;\n    var ratio = this.maxRatio;\n    if (this.height < minHeight) {\n      throw new Error(\"Insufficient height for Code39 encoding: the current height is \" + this.height + \"px and the minimum height is \" + minHeight + \"px.\");\n    }\n    baseUnit = this.getBaseUnit(ratio);\n    while (baseUnit < minBaseUnit && ratio > minRatio) {\n      ratio = parseFloat((ratio - 0.1).toFixed(1));\n      baseUnit = this$1.getBaseUnit(ratio);\n    }\n    if (baseUnit < minBaseUnit) {\n      var minWidth = Math.ceil(this.getBaseWidth(minRatio) * minBaseUnit);\n      throw new Error(\"Insufficient width for Code39 encoding: the current width is \" + this.width + \"px and the minimum width for value \\\"\" + this.value + \"\\\" is \" + minWidth + \"px.\");\n    }\n    this.ratio = ratio;\n    this.baseUnit = baseUnit;\n    this.patternString = this.patternString.substring(0, this.patternString.length - 1);\n    this.pattern = this.pattern.concat(this.patternString.replace(/ratio/g, ratio).split(this.splitCharacter));\n  };\n  Code39.prototype.getBaseUnit = function getBaseUnit(ratio) {\n    return this.width / this.getBaseWidth(ratio);\n  };\n  Code39.prototype.getBaseWidth = function getBaseWidth(ratio) {\n    var characterLength = 3 * (ratio + 2);\n    return this.quietZoneLength + characterLength * (this.dataLength + 2) + this.gapWidth * (this.dataLength + 1);\n  };\n  Code39.prototype.addStart = function addStart() {\n    this.addPattern(this.characterMap.START.pattern);\n    this.addCharacterGap();\n  };\n  Code39.prototype.addBase = function addBase(character) {\n    this.addPattern(character.pattern);\n    this.addCharacterGap();\n  };\n  Code39.prototype.addStop = function addStop() {\n    this.addPattern(this.characterMap.START.pattern);\n  };\n  Code39.prototype.addPattern = function addPattern(pattern) {\n    var this$1 = this;\n    for (var i = 0; i < pattern.length; i++) {\n      this$1.patternString += this$1.patternMappings[pattern.charAt(i)];\n    }\n  };\n  Code39.prototype.addCharacterGap = function addCharacterGap() {\n    this.patternString += this.gapWidth + this.splitCharacter;\n  };\n  return Code39;\n}(Code39Base);\nsetDefaultOptions(Code39, {\n  addCheckSum: false\n});","map":null,"metadata":{},"sourceType":"module"}
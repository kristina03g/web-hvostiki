{"ast":null,"code":"import withPoints from '../mixins/with-points';\nimport Point from '../geometry/point';\nimport Gradient from './gradient';\nvar points = [\"start\", \"end\"];\nvar LinearGradient = function (superclass) {\n  function LinearGradient(options) {\n    if (options === void 0) options = {};\n    superclass.call(this, options);\n    this.start(options.start || new Point());\n    this.end(options.end || new Point(1, 0));\n  }\n  if (superclass) LinearGradient.__proto__ = superclass;\n  LinearGradient.prototype = Object.create(superclass && superclass.prototype);\n  LinearGradient.prototype.constructor = LinearGradient;\n  return LinearGradient;\n}(withPoints(Gradient, points));\nexport default LinearGradient;","map":null,"metadata":{},"sourceType":"module"}
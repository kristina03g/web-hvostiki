{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { BaseChart } from './BaseChart';\nimport { DonutCenter } from './DonutCenter';\nimport { Chart as KendoChart } from '@progress/kendo-charts';\nimport { classNames } from '@progress/kendo-react-common';\n/**\n * Represents the [KendoReact Chart component]({% slug overview_chart_charts %}).\n *\n * @example\n * ```jsx\n * import {\n *     Chart,\n *     ChartSeries,\n *     ChartSeriesItem,\n *     ChartCategoryAxis,\n *     ChartCategoryAxisItem,\n *     ChartTitle,\n *     ChartLegend\n * } from '@progress/kendo-react-charts';\n *\n * const categories = [ 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 ];\n * const series = [ {\n *     name: 'India',\n *     data: [ 3.907, 7.943, 7.848, 9.284, 9.263, 9.801, 3.890, 8.238, 9.552, 6.855 ]\n * }, {\n *     name: 'Russian Federation',\n *     data: [ 4.743, 7.295, 7.175, 6.376, 8.153, 8.535, 5.247, -7.832, 4.3, 4.3 ]\n * }, {\n *     name: 'Germany',\n *     data: [ 0.010, -0.375, 1.161, 0.684, 3.7, 3.269, 1.083, -5.127, 3.690, 2.995 ]\n * }, {\n *     name: 'World',\n *     data: [ 1.988, 2.733, 3.994, 3.464, 4.001, 3.939, 1.333, -2.245, 4.339, 2.727 ]\n * } ];\n *\n * const ChartContainer = () => (\n *     <Chart>\n *         <ChartTitle text=\"Gross domestic product growth GDP annual\" />\n *         <ChartLegend position=\"top\" orientation=\"horizontal\" />\n *         <ChartCategoryAxis>\n *             <ChartCategoryAxisItem categories={categories} startAngle={45} />\n *         </ChartCategoryAxis>\n *         <ChartSeries>\n *             {series.map((item, idx) => (\n *                 <ChartSeriesItem\n *                     key={idx}\n *                     type=\"column\"\n *                     data={item.data}\n *                     name={item.name}\n *                 />))}\n *         </ChartSeries>\n *     </Chart>\n * );\n *\n * ReactDOM.render(\n *     <ChartContainer />,\n *     document.querySelector('my-app')\n * );\n * ```\n */\nvar Chart = /** @class */function (_super) {\n  __extends(Chart, _super);\n  function Chart() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this._baseChart = null;\n    _this.getTarget = function () {\n      return _this;\n    };\n    return _this;\n  }\n  Object.defineProperty(Chart.prototype, \"chartInstance\", {\n    /**\n     * @hidden\n     */\n    get: function get() {\n      if (this._baseChart !== null) {\n        return this._baseChart.chartInstance;\n      }\n      return null;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Chart.prototype, \"surface\", {\n    /**\n     * The Drawing `Surface` of the Chart.\n     */\n    get: function get() {\n      if (this._baseChart !== null) {\n        return this._baseChart.surface;\n      }\n      return null;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Chart.prototype, \"element\", {\n    /**\n     * The DOM element of the Chart.\n     */\n    get: function get() {\n      if (this._baseChart !== null) {\n        return this._baseChart.element;\n      }\n      return null;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * @hidden\n   */\n  Chart.prototype.render = function () {\n    var _this = this;\n    var _a = this.props,\n      donutCenterRender = _a.donutCenterRender,\n      children = _a.children,\n      className = _a.className,\n      baseChartProps = __rest(_a, [\"donutCenterRender\", \"children\", \"className\"]);\n    return React.createElement(BaseChart, __assign({}, baseChartProps, {\n      ref: function ref(baseChart) {\n        return _this._baseChart = baseChart;\n      },\n      chartConstructor: KendoChart,\n      getTarget: this.getTarget,\n      wrapper: \"div\",\n      className: classNames('k-chart k-widget', className)\n    }), children, React.createElement(DonutCenter, {\n      render: donutCenterRender\n    }));\n  };\n  return Chart;\n}(React.Component);\nexport { Chart };","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { Class } from '../../common';\nimport { proxy, now } from '../utils';\nvar extend = Object.assign;\nfunction animationFrame(callback) {\n  window.requestAnimationFrame(callback);\n}\nexport var Animation = function (Class) {\n  function Animation() {\n    Class.call(this);\n    var that = this;\n    that._tickProxy = proxy(that._tick, that);\n    that._started = false;\n  }\n  if (Class) Animation.__proto__ = Class;\n  Animation.prototype = Object.create(Class && Class.prototype);\n  Animation.prototype.constructor = Animation;\n  Animation.prototype.tick = function tick() {};\n  Animation.prototype.done = function done() {};\n  Animation.prototype.onEnd = function onEnd() {};\n  Animation.prototype.onCancel = function onCancel() {};\n  Animation.prototype.start = function start() {\n    if (!this.enabled()) {\n      return;\n    }\n    if (!this.done()) {\n      this._started = true;\n      animationFrame(this._tickProxy);\n    } else {\n      this.onEnd();\n    }\n  };\n  Animation.prototype.enabled = function enabled() {\n    return true;\n  };\n  Animation.prototype.cancel = function cancel() {\n    this._started = false;\n    this.onCancel();\n  };\n  Animation.prototype._tick = function _tick() {\n    var that = this;\n    if (!that._started) {\n      return;\n    }\n    that.tick();\n    if (!that.done()) {\n      animationFrame(that._tickProxy);\n    } else {\n      that._started = false;\n      that.onEnd();\n    }\n  };\n  return Animation;\n}(Class);\nexport var Transition = function (Animation) {\n  function Transition(options) {\n    Animation.call(this);\n    extend(this, options);\n  }\n  if (Animation) Transition.__proto__ = Animation;\n  Transition.prototype = Object.create(Animation && Animation.prototype);\n  Transition.prototype.constructor = Transition;\n  Transition.prototype.done = function done() {\n    return this.timePassed() >= this.duration;\n  };\n  Transition.prototype.timePassed = function timePassed() {\n    return Math.min(this.duration, now() - this.startDate);\n  };\n  Transition.prototype.moveTo = function moveTo(options) {\n    var that = this,\n      movable = that.movable;\n    that.initial = movable[that.axis];\n    that.delta = options.location - that.initial;\n    that.duration = typeof options.duration === 'number' ? options.duration : 300;\n    that.tick = that._easeProxy(options.ease);\n    that.startDate = now();\n    that.start();\n  };\n  Transition.prototype._easeProxy = function _easeProxy(ease) {\n    var that = this;\n    return function () {\n      that.movable.moveAxis(that.axis, ease(that.timePassed(), that.initial, that.delta, that.duration));\n    };\n  };\n  Transition.easeOutExpo = function easeOutExpo(t, b, c, d) {\n    return t === d ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\n  };\n  return Transition;\n}(Animation);","map":null,"metadata":{},"sourceType":"module"}